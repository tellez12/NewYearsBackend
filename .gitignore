# Built application files
*.apk
*.app
*.exe
*.ipa
*.dll
*.dylib
*.pdb
*.so
*.winmd
*.nupkg

# Build results
[Dd]ebug/
[Rr]elease/
x64/
x86/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/

# Visual Studio cache files
.vs/
.vscode/

# ASP.NET Scaffolding
ScaffoldingReadMe.txt

# User-specific files
*.suo
*.user
*.userosscache
*.sln.docstates

# ReSharper and Rider
_ReSharper.*/
*.resharper
.idea/

# Windows image file caches
Thumbs.db
ehthumbs.db

# Folder config file
Desktop.ini

# Visual Studio code coverage results
*.coverage
*.coveragexml

# NCrunch
ncrunch_*
*.ncrunchsolution

# MightyMoose
*.mm.*
AutoTest.Net/

# Visual Studio Profiling
*.psess
*.vsp
*.vspx
*.sap

# TFS Patch files
*.patch

# NuGet Packages
*.nupkg
*.snupkg
# NuGet Symbol Packages
*.symbols.nupkg
packages/
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
*.nuget.props
*.nuget.targets

# Windows store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!*.[Cc]ache/

# Others
ClientBin/
[Ss]tyle[Cc]op.*
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
node_modules/
orleans.codegen.cs

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file to a newer
# Visual Studio version. Backup files are not needed, because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.bak

# Microsoft Fakes
FakesAssemblies/

# PowerShell Modules
*.psm1

# Docker
**/.env
**/.env.*

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/
